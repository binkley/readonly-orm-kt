buildscript {
    ext {
        kotlin_version = '1.2-M1'
        detekt_version = '1.0.0.M13.2'
        ktlint_version = '0.9.0'
        mockito_version = '2.8.47'
    }

    repositories {
        mavenCentral()
        maven { url 'https://dl.bintray.com/kotlin/kotlin-eap-1.2' }
        maven { url 'https://plugins.gradle.org/m2' }
    }

    dependencies {
        classpath group: 'org.jetbrains.kotlin', name: 'kotlin-gradle-plugin',
                version: "$kotlin_version"
        classpath group: 'io.gitlab.arturbosch.detekt',
                name: 'detekt-gradle-plugin', version: "${detekt_version}"
    }
}

group = 'hm.binkley.labs'
version = '0-SNAPSHOT'

apply plugin: 'build-dashboard'
apply plugin: 'kotlin'
apply plugin: 'findbugs'
apply plugin: 'jacoco'
apply plugin: 'io.gitlab.arturbosch.detekt'

repositories {
    mavenCentral()
    jcenter()
    maven { url 'http://dl.bintray.com/kotlin/kotlin-eap-1.2' }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

configurations {
    ktlint
}

dependencies {
    ktlint group: 'com.github.shyiko', name: 'ktlint',
            version: "${ktlint_version}"
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jre8'
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-reflect'
    testCompile group: 'org.jetbrains.kotlin', name: 'kotlin-test-junit'
    testCompile group: 'org.hamcrest', name: 'hamcrest-junit',
            version: '2.0.0.0'
    testCompile group: 'org.mockito', name: 'mockito-core',
            version: "${mockito_version}"
}

detekt {
    profile('main') {
        output = "$projectDir/build/reports/detekt/report.xml"
        outputFormat = 'xml'
    }
}

task detektReport {
    doLast {
        ant.
        ant.xslt(in: "$projectDir/build/reports/detekt/report.xml",
                out: "$projectDir/build/reports/detekt/index.html",
                style: "$projectDir/config/checkstyle/checkstyle-noframes-severity-sorted.xsl") {
        }
    }
}

jacoco {
    toolVersion = '0.7.10-SNAPSHOT'
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.68
            }
        }
    }
}

task ktlint(type: JavaExec) {
    main = 'com.github.shyiko.ktlint.Main'
    classpath = configurations.ktlint
    args 'src/**/*.kt'
}

tasks.withType(FindBugs) {
    reports {
        html.enabled = true
        xml.enabled = false
    }
}

check.dependsOn jacocoTestReport
check.dependsOn jacocoTestCoverageVerification
jacocoTestCoverageVerification.mustRunAfter jacocoTestReport

detektReport.dependsOn detektCheck
check.dependsOn detektReport
check.dependsOn ktlint
